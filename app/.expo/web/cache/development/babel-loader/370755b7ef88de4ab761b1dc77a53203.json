{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mat/projects/expo-app/app/App.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { createClient, Provider } from \"urql\";\nimport { DetailsScreen } from \"./pages/Details\";\nimport { HomeScreen } from \"./pages/Home\";\nvar Stack = createStackNavigator();\nvar client = createClient({\n  url: \"http://192.168.1.21:4000/graphql\",\n  requestPolicy: \"cache-and-network\"\n});\n\nfunction App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  useEffect(function () {\n    var getUsername = function getUsername() {\n      var response;\n      return _regeneratorRuntime.async(function getUsername$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"username\"));\n\n            case 2:\n              response = _context.sent;\n              setUsername(response || null);\n              setLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getUsername();\n  }, []);\n  return React.createElement(Provider, {\n    value: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, !loading && React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Witamy Was serdzecznie!\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Pytania\",\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mat/projects/expo-app/app/App.tsx"],"names":["AsyncStorage","NavigationContainer","createStackNavigator","React","useEffect","useState","createClient","Provider","DetailsScreen","HomeScreen","Stack","client","url","requestPolicy","App","loading","setLoading","username","setUsername","getUsername","getItem","response"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,mBAAT,QAAmD,0BAAnD;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,MAAvC;AACA,SAASC,aAAT;AACA,SAASC,UAAT;AAEA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;AACA,IAAMS,MAAM,GAAGL,YAAY,CAAC;AAC1BM,EAAAA,GAAG,oCADuB;AAE1BC,EAAAA,aAAa,EAAE;AAFW,CAAD,CAA3B;;AAKA,SAASC,GAAT,GAAe;AACb,kBAA8BT,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKnB,YAAY,CAACoB,OAAb,CAAqB,UAArB,CADL;;AAAA;AACZC,cAAAA,QADY;AAElBH,cAAAA,WAAW,CAACG,QAAQ,IAAI,IAAb,CAAX;AACAL,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAHkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;;AAKAG,IAAAA,WAAW;AACZ,GAPQ,EAON,EAPM,CAAT;AASA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACI,OAAD,IACC,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,yBADP;AAEE,IAAA,SAAS,EAAEN,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAE,SAApB;AAA+B,IAAA,SAAS,EAAED,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFJ,CADF,CADF;AAgBD;;AAED,eAAeM,GAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { createClient, Provider } from \"urql\";\nimport { DetailsScreen } from \"./pages/Details\";\nimport { HomeScreen } from \"./pages/Home\";\n\nconst Stack = createStackNavigator();\nconst client = createClient({\n  url: `http://192.168.1.21:4000/graphql`,\n  requestPolicy: \"cache-and-network\",\n});\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    const getUsername = async () => {\n      const response = await AsyncStorage.getItem(\"username\");\n      setUsername(response || null);\n      setLoading(false);\n    };\n    getUsername();\n  }, []);\n\n  return (\n    <Provider value={client}>\n      <NavigationContainer>\n        {!loading && (\n          <Stack.Navigator>\n            {/* {!isUsername && <Stack.Screen name=\"Home\" component={HomeScreen} />} */}\n            <Stack.Screen\n              name=\"Witamy Was serdzecznie!\"\n              component={HomeScreen}\n            />\n            <Stack.Screen name={\"Pytania\"} component={DetailsScreen} />\n          </Stack.Navigator>\n        )}\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}