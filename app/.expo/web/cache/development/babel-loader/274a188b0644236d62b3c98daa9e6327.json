{"ast":null,"code":"var _jsxFileName = \"/home/mat/projects/expo-app/app/App.tsx\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as React from \"react\";\nimport { createClient, Provider } from \"urql\";\nimport { DetailsScreen } from \"./pages/Details\";\nimport { HomeScreen } from \"./pages/Home\";\nvar Stack = createStackNavigator();\nvar client = createClient({\n  url: \"http://192.168.1.21:4000/graphql\",\n  requestPolicy: \"cache-and-network\"\n});\n\nfunction App() {\n  return React.createElement(Provider, {\n    value: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    options: {\n      title: \"Witamy Was serdzecznie\"\n    },\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Questions\",\n    options: {\n      title: \"Pytania\"\n    },\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mat/projects/expo-app/app/App.tsx"],"names":["NavigationContainer","createStackNavigator","React","createClient","Provider","DetailsScreen","HomeScreen","Stack","client","url","requestPolicy","App","headerLeft","title"],"mappings":";AACA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,MAAvC;AACA,SAASC,aAAT;AACA,SAASC,UAAT;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AACA,IAAMO,MAAM,GAAGL,YAAY,CAAC;AAC1BM,EAAAA,GAAG,oCADuB;AAE1BC,EAAAA,aAAa,EAAE;AAFW,CAAD,CAA3B;;AAKA,SAASC,GAAT,GAAe;AAUb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAA,eAAM,IAAN;AAAA;AAAd,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE;AADA,KAFX;AAKE,IAAA,SAAS,EAAEP,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAE;AACPO,MAAAA,KAAK,EAAE;AADA,KAFX;AAKE,IAAA,SAAS,EAAER,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF,CADF;AAsBD;;AAED,eAAeM,GAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { createClient, Provider } from \"urql\";\nimport { DetailsScreen } from \"./pages/Details\";\nimport { HomeScreen } from \"./pages/Home\";\n\nconst Stack = createStackNavigator();\nconst client = createClient({\n  url: `http://192.168.1.21:4000/graphql`,\n  requestPolicy: \"cache-and-network\",\n});\n\nfunction App() {\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   const getUsername = async () => {\n  //     const response = await AsyncStorage.getItem(\"username\");\n  //     setLoading(false);\n  //   };\n  //   getUsername();\n  // }, []);\n\n  return (\n    <Provider value={client}>\n      <NavigationContainer>\n        <Stack.Navigator screenOptions={{ headerLeft: () => null }}>\n          <Stack.Screen\n            name=\"Home\"\n            options={{\n              title: \"Witamy Was serdzecznie\",\n            }}\n            component={HomeScreen}\n          />\n          <Stack.Screen\n            name=\"Questions\"\n            options={{\n              title: \"Pytania\",\n            }}\n            component={DetailsScreen}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}