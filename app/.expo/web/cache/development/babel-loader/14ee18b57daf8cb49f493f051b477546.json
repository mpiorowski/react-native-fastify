{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mat/projects/expo-app/app/pages/Question.tsx\";\n\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RadioButton } from \"react-native-paper\";\nimport { useFindAllQuestions } from \"./questions.graphql\";\nexport var Question = function Question() {\n  var _useFindAllQuestions = useFindAllQuestions(),\n      data = _useFindAllQuestions.data;\n\n  var questions = (data == null ? void 0 : data.questions) || [];\n\n  var _React$useState = React.useState(\"1\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var router = useRoute();\n  var navigation = useNavigation();\n  var _ref = router.params,\n      number = _ref.number;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, questions && questions[number - 1] && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 22,\n      padding: 20,\n      textAlign: \"center\",\n      borderBottomWidth: 1,\n      borderBottomColor: \"gray\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, questions[number - 1].question), React.createElement(RadioButton.Group, {\n    onValueChange: function onValueChange(newValue) {\n      return setValue(newValue);\n    },\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(RadioButton.Item, {\n    label: questions[number - 1].answer1,\n    value: \"1\",\n    position: \"leading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(RadioButton.Item, {\n    label: questions[number - 1].answer2,\n    value: \"2\",\n    position: \"leading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(RadioButton.Item, {\n    label: questions[number - 1].answer3,\n    value: \"3\",\n    position: \"leading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(RadioButton.Item, {\n    label: questions[number - 1].answer4,\n    value: \"4\",\n    position: \"leading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })))), React.createElement(Button, {\n    title: \"wroc\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/mat/projects/expo-app/app/pages/Question.tsx"],"names":["useNavigation","useRoute","React","RadioButton","useFindAllQuestions","Question","data","questions","useState","value","setValue","router","navigation","params","number","fontSize","padding","textAlign","borderBottomWidth","borderBottomColor","question","newValue","answer1","answer2","answer3","answer4","navigate"],"mappings":"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","sourcesContent":["import { useNavigation, useRoute } from \"@react-navigation/native\";\nimport React from \"react\";\nimport { Button, Text, View } from \"react-native\";\nimport { RadioButton } from \"react-native-paper\";\nimport { useFindAllQuestions } from \"./questions.graphql\";\n\nexport const Question: React.FC = () => {\n  const { data } = useFindAllQuestions();\n  const questions = data?.questions || [];\n\n  const [value, setValue] = React.useState(\"1\");\n\n  const router = useRoute();\n  const navigation = useNavigation();\n  const { number } = router.params as { number: number };\n\n  // {questions.map((question: any) => (\n  //   <Text key={question.id}>{question.question}</Text>\n  // ))}\n  return (\n    <View>\n      {questions && questions[number - 1] && (\n        <View>\n          <Text\n            style={{\n              fontSize: 22,\n              padding: 20,\n              textAlign: \"center\",\n              borderBottomWidth: 1,\n              borderBottomColor: \"gray\",\n            }}\n          >\n            {questions[number - 1].question}\n          </Text>\n          <RadioButton.Group\n            onValueChange={(newValue) => setValue(newValue)}\n            value={value}\n          >\n            <View>\n              <RadioButton.Item\n                label={questions[number - 1].answer1}\n                value={\"1\"}\n                position=\"leading\"\n              />\n            </View>\n            <View>\n              <RadioButton.Item\n                label={questions[number - 1].answer2}\n                value={\"2\"}\n                position=\"leading\"\n              />\n            </View>\n            <View>\n              <RadioButton.Item\n                label={questions[number - 1].answer3}\n                value={\"3\"}\n                position=\"leading\"\n              />\n            </View>\n            <View>\n              <RadioButton.Item\n                label={questions[number - 1].answer4}\n                value={\"4\"}\n                position=\"leading\"\n              />\n            </View>\n          </RadioButton.Group>\n        </View>\n      )}\n      <Button title=\"wroc\" onPress={() => navigation.navigate(\"Home\")} />\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}